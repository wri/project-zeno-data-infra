# Build image of the specified type and push to registry
on:
  workflow_call:
    inputs:
      project_dir:
        required: true
        type: string
      run_platform:
        required: true
        type: string
    secrets:
      AWS_REGION:
        required: true
      AWS_ZENO_ACCOUNT_ID:
        required: true
      AWS_ZENO_ACCESS_KEY_ID:
        required: true
      AWS_ZENO_SECRET_ACCESS_KEY:
        required: true
      CONTAINER_REGISTRY:
        required: true


env:
  CONTAINER_REGISTRY: ${{ secrets.AWS_ZENO_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
  CONTAINER_REPO_NAME: analytics-api

jobs:
  build_and_push_image:
    runs-on: ${{ inputs.run_platform }}
    steps:
      - name: Install needed packages if running under ACT
        if: ${{ env.ACT }}
        run: |
          apt-get update
          apt-get install sudo nodejs iptables docker.io -y
          curl "https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip" -o /tmp/awscliv2.zip
          unzip -q /tmp/awscliv2.zip -d /tmp
          rm /tmp/awscliv2.zip
          /tmp/aws/install --update
          rm -rf /tmp/aws/

      - name: Checkout Code
        if: success()
        uses: actions/checkout@v5

      - name: Set image tag
        run: echo "IMAGE_TAG=$(git rev-parse --short HEAD)_${{ inputs.project_dir }}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        if: success()
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.AWS_ZENO_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ZENO_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        if: success()
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS \
          --password-stdin ${{ env.CONTAINER_REGISTRY }}

      - name: Build Docker image
        if: success()
        run: |
          cd ${{ inputs.project_dir }}
          docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_REPO_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Push Docker image to container registry
        if: success()
        run: |
          docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_REPO_NAME }}:${{ env.IMAGE_TAG }}
