# Description
on:
  workflow_call:
    strategy:
      matrix:
        project_dir: [api, pipelines]
#    inputs:
#      project_dir:
#        required: true
#        type: string

env:
  CONTAINER_REPO_NAME: analytics-api

jobs:
  build_and_push_image:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ZENO_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_ZENO_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_ZENO_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CONTAINER_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
      PROJECT_DIR: ${{ matrix.project_dir }}
    steps:
      - name: Install needed packages if running under ACT
        if: ${{ env.ACT }}
        run: |
          apt-get update
          apt-get install sudo nodejs iptables docker.io -y
          curl "https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip" -o /tmp/awscliv2.zip
          unzip -q /tmp/awscliv2.zip -d /tmp
          rm /tmp/awscliv2.zip
          /tmp/aws/install --update
          rm -rf /tmp/aws/

      - name: Checkout Code
        if: success()
        uses: actions/checkout@v4

      - name: Set short SHA
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Configure AWS credentials
        if: success()
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ZENO_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_ZENO_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        if: success()
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
          docker login --username AWS \
          --password-stdin ${{ env.CONTAINER_REGISTRY }}

      - name: Build Docker image
        if: success()
        run: |
          cd ${{ PROJECT_DIR }}
          docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_REPO_NAME }}:${{ env.SHORT_SHA }}_${{ env.PROJECT_DIR }} .

      - name: Push Docker image to container registry
        if: success()
        run: |
          docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_REPO_NAME }}:${{ env.SHORT_SHA }}_${{ env.PROJECT_DIR }}