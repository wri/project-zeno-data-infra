name: Build and Push Docker Image to AWS ECR

on:
  push:

jobs:
  build-and-push:
    runs-on: ubuntu-24.04-arm
    container: "ghcr.io/osgeo/gdal:ubuntu-small-3.10.3"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install packages needed for later actions
        if: success()
        shell: bash
        run: |
          apt-get update
          apt-get install sudo nodejs iptables docker.io -y

#      - name: Install CLANG for building rasterio deps
#        if: success()
#        id: install_clang
#        uses: rlalik/setup-cpp-compiler@master
#        with:
#          compiler: clang-latest
#
#      - name: Install GCC for building rasterio deps
#        if: success()
#        id: install_gcc
#        uses: rlalik/setup-cpp-compiler@master
#        with:
#          compiler: gcc-latest
#
#      - name: Install uv, create a VENV, and enable caching
#        if: success()
#        uses: astral-sh/setup-uv@v6
#        with:
#          enable-cache: true
#          activate-environment: true
#          prune-cache: false
#
#      - name: Install project dependencies
#        if: success()
#        shell: bash
#        env:
#          CC: ${{ steps.install_clang.outputs.cc }}
#          GCC: ${{ steps.install_gcc.outputs.cc }}
#          MAKEFLAGS: "-j$(nproc)"
#        run: |
#          cd $GITHUB_WORKSPACE
#          uv sync --locked --no-install-project --dev -p 3.13.5
#
#      - name: Run tests
#        if: success()
#        shell: bash
#        env:
#          AWS_REGION: us-east-1
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Store AWS credentials in GitHub Secrets
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        run: |
#          cd $GITHUB_WORKSPACE
#          pytest test --maxfail=1 --disable-warnings

      - name: Configure AWS credentials
        if: success()
        uses: aws-actions/configure-aws-credentials@v4
        env:
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Store AWS credentials in GitHub Secrets
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        if: success()
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker Image
        if: success()
        env:
          AWS_REGION: us-east-1
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          REPOSITORY_NAME: analytics-api
        run: |
          IMAGE_TAG=test_image_1
          docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME:$IMAGE_TAG .

      - name: Push Docker Image to ECR
        if: success()
        env:
          AWS_REGION: us-east-1
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          REPOSITORY_NAME: analytics-api
        run: |
          IMAGE_TAG=test_image_1
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME:$IMAGE_TAG
