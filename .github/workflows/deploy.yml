# Deploy the API
on:
  workflow_call:
    secrets:
      AWS_REGION:
        required: true
      AWS_ZENO_ACCESS_KEY_ID:
        required: true
      AWS_ZENO_SECRET_ACCESS_KEY:
        required: true
      AWS_GFW_ACCESS_KEY_ID:
        required: true
      AWS_GFW_SECRET_ACCESS_KEY:
        required: true
      CONTAINER_REGISTRY:
        required: true
      GFW_API_KEY:
        required: true
      DASK_SCHEDULER_ADDRESS:
        required: true
      NEW_RELIC_LICENSE_KEY:
        required: true
      DASK_COILED_TOKEN:
        required: true
      PREFECT_API_KEY:
        required: true
      PREFECT_ACCOUNT_ID:
        required: true
      PREFECT_WORKSPACE_ID:
        required: true

env:
  CONTAINER_REPO_NAME: analytics-api

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        if: success()
        uses: actions/checkout@v5

      - name: Set image tags
        if: success()
        run: |
          echo "API_IMAGE_TAG=$(git rev-parse --short HEAD)_api" >> $GITHUB_ENV
          echo "PIPELINES_IMAGE_TAG=$(git rev-parse --short HEAD)_pipelines" >> $GITHUB_ENV

      - name: Set up Terraform
        if: success()
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      - name: Terraform Plan
        if: success()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ZENO_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ZENO_SECRET_ACCESS_KEY }}
        run: |
          API_IMAGE=${{ secrets.CONTAINER_REGISTRY }}/${{ env.CONTAINER_REPO_NAME }}:${{ env.API_IMAGE_TAG }}
          PIPELINES_IMAGE=${{ secrets.CONTAINER_REGISTRY }}/${{ env.CONTAINER_REPO_NAME }}:${{ env.PIPELINES_IMAGE_TAG }}
          cd terraform
          terraform init
          terraform plan -var="api_key=${{ secrets.GFW_API_KEY }}" -var="api_image=$API_IMAGE" -var="pipelines_image=$PIPELINES_IMAGE" -var="aws_secret_access_key=${{secrets.AWS_ZENO_SECRET_ACCESS_KEY}}" -var="aws_access_key_id=${{secrets.AWS_ZENO_ACCESS_KEY_ID}}" -var="new_relic_license_key=${{ secrets.NEW_RELIC_LICENSE_KEY }}" -var="coiled_token=${{ secrets.DASK_COILED_TOKEN }}" -var="prefect_api_key=${{ secrets.PREFECT_API_KEY }}" -var="prefect_account_id=${{ secrets.PREFECT_ACCOUNT_ID }}" -var="prefect_workspace_id=${{ secrets.PREFECT_WORKSPACE_ID }}" -var="gfw_aws_access_key_id=${{ secrets.AWS_GFW_ACCESS_KEY_ID }}" -var="gfw_aws_secret_access_key=${{ secrets.AWS_GFW_SECRET_ACCESS_KEY }}" --out=tf.plan

      - name: Terraform Apply
        if: success()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ZENO_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ZENO_SECRET_ACCESS_KEY }}
        run: |
          cd terraform
          terraform apply -auto-approve tf.plan
